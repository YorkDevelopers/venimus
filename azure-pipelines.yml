pool:
  vmImage: 'Ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  mockauthimageName: 'venimus-mockauth'

steps:
- script: docker run -d -p 27017:27017 mongo
  displayName: 'Setup MongoDB'
  
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.0.x'

- script: dotnet publish "./server/tools/MockAuth/MockAuth.csproj" --configuration $(buildConfiguration) --output '$(Build.ArtifactStagingDirectory)/mockauth'
  displayName: 'Build MockAuth'

- task: Docker@2
  displayName: Build an MockAuth image
  inputs:
    repository: $(mockauthimageName)
    command: build
    Dockerfile: ./server/tools/MockAuth/Dockerfile  
    buildContext: "$(Build.ArtifactStagingDirectory)/mockauth"

- script: docker run -d -p 6001:443 $(mockauthimageName)
  displayName: 'Run MockAuth'

- script: dotnet build "./server/src/VenimusAPIs/VenimusAPIs.csproj" --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test ./server/tests/VenimusAPIs.Tests/VenimusAPIs.Tests.csproj --logger:trx
  displayName: 'Running tests'
  env: 
    MongoDB__connectionString: "mongodb://localhost"
    MongoDB__databaseName: "TestDatabase"
    Auth0__Domain: "localhost:6001"
    Auth0__Audience: "https://Venimus.YorkDevelopers.org"

- script: dotnet publish "./server/src/VenimusAPIs/VenimusAPIs.csproj" --configuration $(buildConfiguration) --output '$(Build.ArtifactStagingDirectory)/api'
  displayName: 'dotnet publish $(buildConfiguration)'
  
- pwsh: ((Get-Content -path .\default.html -Raw) -replace '<!--versionNumber-->', $env:VERSION_NUMBER) | Set-Content -Path .\default.html
  workingDirectory: "$(Build.ArtifactStagingDirectory)/app/wwwroot"
  env:
    VERSION_NUMBER: '1.0.$(Build.BuildID)'
  displayName: 'Set up version to the view'

- task: PublishBuildArtifacts@1

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true

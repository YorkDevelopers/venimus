//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VenimusAPIs.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VenimusAPIs.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An event with this slug already exists for this group..
        /// </summary>
        public static string EVENT_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("EVENT_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot create an event which ends before it starts..
        /// </summary>
        public static string EVENT_END_BEFORE_START {
            get {
                return ResourceManager.GetString("EVENT_END_BEFORE_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event cannot be deleted as it has already taken place..
        /// </summary>
        public static string EVENT_HAS_HAPPENED {
            get {
                return ResourceManager.GetString("EVENT_HAS_HAPPENED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This event has already taken place.
        /// </summary>
        public static string EVENT_HAS_TAKEN_PLACE {
            get {
                return ResourceManager.GetString("EVENT_HAS_TAKEN_PLACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot create an event in the past..
        /// </summary>
        public static string EVENT_IN_THE_PAST {
            get {
                return ResourceManager.GetString("EVENT_IN_THE_PAST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry this is event is full..
        /// </summary>
        public static string EVENT_IS_FULL {
            get {
                return ResourceManager.GetString("EVENT_IS_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A group using this name already exists.
        /// </summary>
        public static string GROUP_ALREADY_EXISTS_WITH_THIS_NAME {
            get {
                return ResourceManager.GetString("GROUP_ALREADY_EXISTS_WITH_THIS_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A group using this slug already exists.
        /// </summary>
        public static string GROUP_ALREADY_EXISTS_WITH_THIS_SLUG {
            get {
                return ResourceManager.GetString("GROUP_ALREADY_EXISTS_WITH_THIS_SLUG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group cannot be deleted as it has one or events.  Please mark the group as InActive instead..
        /// </summary>
        public static string GROUP_HAS_EVENTS {
            get {
                return ResourceManager.GetString("GROUP_HAS_EVENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This event does not allow you to bring guests.  All attendees must be members of this group..
        /// </summary>
        public static string GUESTS_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("GUESTS_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s membership of this group has already been approved..
        /// </summary>
        public static string MEMBER_ALREADY_APPROVED {
            get {
                return ResourceManager.GetString("MEMBER_ALREADY_APPROVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user does not belong to this group.
        /// </summary>
        public static string NOT_A_MEMBER_OF_THE_GROUP {
            get {
                return ResourceManager.GetString("NOT_A_MEMBER_OF_THE_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry this will exceed the maximum number of people allowed to attend this event..
        /// </summary>
        public static string TOO_MANY_PEOPLE {
            get {
                return ResourceManager.GetString("TOO_MANY_PEOPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user with this display name already exists..
        /// </summary>
        public static string USER_ALREADY_EXISTS_WITH_THIS_NAME {
            get {
                return ResourceManager.GetString("USER_ALREADY_EXISTS_WITH_THIS_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are already signed up to this event..
        /// </summary>
        public static string USER_ALREADY_SIGNED_UP {
            get {
                return ResourceManager.GetString("USER_ALREADY_SIGNED_UP", resourceCulture);
            }
        }
    }
}

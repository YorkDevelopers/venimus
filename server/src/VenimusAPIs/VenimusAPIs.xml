<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VenimusAPIs</name>
    </assembly>
    <members>
        <member name="M:VenimusAPIs.Controllers.EventsController.Post(System.String,VenimusAPIs.ViewModels.CreateEvent)">
             <summary>
                 Allows you to create a new event for your group.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/groups/YorkCodeDojo/events
                 {
                     "title" : "Game of Life - Oct 2019",
                     "description" : "Tonight we will work in pairs implementing the **classic Game Of Life**"
                     "location" : "Room 12"
                     "startTime" : "2019-12-12 18:30"
                     "endTime" : "2019-12-12 21:00"
                 }
            
             </remarks>
             <returns>The route to the created event</returns>
             <response code="201">Success</response>
             <response code="401">User is not authorized.</response>
             <response code="404">The group does not exist.</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.EventsController.Put(System.String,System.String,VenimusAPIs.ViewModels.UpdateEvent)">
             <summary>
                 Allows you to amend the details of an existing event
             </summary>
             <remarks>
             Sample request:
            
                 PUT /api/groups/YorkCodeDojo/events/12345
                 {
                     "title" : "Game of Life - Oct 2019",
                     "description" : "Tonight we will work in pairs implementing the **classic Game Of Life**"
                     "location" : "Room 12"
                     "startTime" : "2019-12-12 18:30"
                     "endTime" : "2019-12-12 21:00"
                     "host" : "E Betteridge"
                     "speaker" : "J Betteridge"
                 }
            
             </remarks>
             <returns>No data</returns>
             <response code="200">Success</response>
             <response code="401">User is not authorized.</response>
             <response code="404">The group does not exist.</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.EventsController.Patch(System.String,System.String,VenimusAPIs.ViewModels.PartiallyUpdateEvent)">
             <summary>
                 Allows you to amend the details of an existing event
             </summary>
             <remarks>
             Sample request:
            
                 PATCH /api/groups/YorkCodeDojo/events/12345
                 {
                     "title" : "Game of Life - Oct 2019",
                     "description" : "Tonight we will work in pairs implementing the **classic Game Of Life**"
                     "location" : null
                     "startTime" : "2019-12-12 18:30"
                     "endTime" : "2019-12-12 21:00"
                     "host" : "E Betteridge"
                     "speaker" : "J Betteridge"
                 }
            
             </remarks>
             <returns>No data</returns>
             <response code="200">Success</response>
             <response code="401">User is not authorized.</response>
             <response code="404">The group does not exist.</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.EventsController.Get(System.String,System.String)">
             <summary>
                 Allows you to retrieve the details of an event
             </summary>
             <remarks>
             Sample request:
            
                 GET /api/groups/YorkCodeDojo/events/1234
            
             </remarks>
             <returns>The GetEvent view model</returns>
             <response code="200">Success</response>
             <response code="404">Group or Event does not exist.</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.GroupsController.Post(VenimusAPIs.ViewModels.CreateGroup)">
             <summary>
                 Allows you to create a new group
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/groups
                 {
                     "name" : "YorkCodeDojo",
                     "description" : "Improve your code by practice."
                 }
            
             </remarks>
             <returns>The route to the created group</returns>
             <response code="201">Success</response>
             <response code="401">User is not authorized.</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.GroupsController.Get(System.String)">
             <summary>
                 Allows you to retrieve the details of a group
             </summary>
             <remarks>
             Sample request:
            
                 GET /api/groups/YorkCodeDojo
            
             </remarks>
             <returns>The GetGroup view model</returns>
             <response code="200">Success</response>
             <response code="404">Group does not exist.</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.GroupsController.Get">
             <summary>
                 Allows you to retrieve the list of all groups
             </summary>
             <remarks>
             Sample request:
            
                 GET /api/groups
            
             </remarks>
             <returns>An array of ListGroup view models</returns>
             <response code="200">Success</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.ActiveGroupsController.Get">
             <summary>
                 Allows you request the list of active groups
             </summary>
             <remarks>
             Sample request:
            
                 GET /public/Groups
            
             </remarks>
             <returns>Array of ListActiveGroups view models</returns>
             <response code="200">Success</response>
        </member>
        <member name="M:VenimusAPIs.Controllers.FutureEventsController.Get">
             <summary>
                 Allows you request the list of future events.  Maximum of 10 per group.
             </summary>
             <remarks>
             Sample request:
            
                 GET /public/FutureEvents
            
             </remarks>
             <returns>Array of FutureEvent view models</returns>
             <response code="200">Success</response>
        </member>
        <member name="P:VenimusAPIs.Models.Event.Id">
            <summary>
            Unique ID for the event
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Event.GroupId">
            <summary>
            The group to which this event belongs
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Event.Title">
            <summary>
            The title of the event,  for example March 2019 Meetup. Must be unique for the group.
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Event.Description">
            <summary>
            A description of the event,  in markdown format.
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Event.Location">
            <summary>
            The location of the event, for example York Minster,  Room 201 York St John University
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Event.StartTime">
            <summary>
            Date and time the event starts
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Event.EndTime">
            <summary>
            Date and time the event ends.  Must be after the StartTime
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Event.Members">
            <summary>
            Attendees of this group
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.Id">
            <summary>
                The unique internal ID of this group
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.IsActive">
            <summary>
                Is this group still actively running events?
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.Slug">
            <summary>
                The unique external id for the group.  For example YorkCodeDojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.Name">
            <summary>
            The unique name for the group / community.  For example York Code Dojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.Description">
            <summary>
            A description of the group in markdown
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.Logo">
            <summary>
                The group's logo.
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.Members">
            <summary>
            Members of this group
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.Administrators">
            <summary>
            Administrators of this group
            </summary>
        </member>
        <member name="P:VenimusAPIs.Models.Group.SlackChannelName">
            <summary>
                The name of this groups slack channel
            </summary>
        </member>
        <member name="M:VenimusAPIs.UserControllers.UserConnectedController.Post">
             <summary>
                 Called once the user has connected to the frontend.  This ensures that they exist in the database.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/users/connected
                 {
                 }
            
             </remarks>
             <returns>The route to the user</returns>
             <response code="201">Success</response>
        </member>
        <member name="M:VenimusAPIs.UserControllers.UserGroupsController.Post(VenimusAPIs.ViewModels.JoinGroup)">
             <summary>
                 Allows the current user to join a group
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/groups
                 {
                     "groupSlug" : "YorkCodeDojo",
                 }
            
             </remarks>
             <returns>The route to the created group</returns>
             <response code="204">Success</response>
             <response code="401">User is not authorized.</response>
             <response code="404">Group does not exist</response>
        </member>
        <member name="M:VenimusAPIs.UserControllers.UserGroupsController.DELETE(System.String)">
             <summary>
                 Allows the current user to leave a group
             </summary>
             <remarks>
             Sample request:
            
                 DELETE /api/groups/YorkCodeDojo
            
             </remarks>
             <returns>Nothing</returns>
             <response code="204">Success</response>
             <response code="401">User is not authorized.</response>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateEvent.Title">
            <summary>
            The title of the event,  for example March 2019 Meetup. Must be unique for the group.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateEvent.Description">
            <summary>
            A description of the event,  in markdown format.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateEvent.Location">
            <summary>
            The location of the event, for example York Minster,  Room 201 York St John University
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateEvent.StartTime">
            <summary>
            Date and time the event starts
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateEvent.EndTime">
            <summary>
            Date and time the event ends.  Must be after the StartTime
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateGroup.Slug">
            <summary>
                The unique external code for the group.  For example YorkCodeDojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateGroup.IsActive">
            <summary>
                Is this group still actively running events?
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateGroup.Name">
            <summary>
            The unique name for the group / community.  For example York Code Dojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateGroup.Description">
            <summary>
            A description of the group in markdown
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateGroup.SlackChannelName">
            <summary>
                The name of this groups slack channel
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.CreateGroup.LogoInBase64">
            <summary>
                The group's logo.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.GetGroup.Slug">
            <summary>
                The unique external code for the group.  For example YorkCodeDojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.GetGroup.IsActive">
            <summary>
                Is this group still actively running events?
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.GetGroup.Name">
            <summary>
            The unique name for the group / community.  For example York Code Dojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.GetGroup.Description">
            <summary>
            A description of the group in markdown
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.GetGroup.SlackChannelName">
            <summary>
                The name of this groups slack channel
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.GetGroup.LogoInBase64">
            <summary>
                The group's logo.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.JoinGroup.GroupSlug">
            <summary>
                The slug of the group that the user is joining.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListActiveGroups.Slug">
            <summary>
                The unique external code for the group.  For example YorkCodeDojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListActiveGroups.Name">
            <summary>
            The unique name for the group / community.  For example York Code Dojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListActiveGroups.Description">
            <summary>
            A description of the group in markdown
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListActiveGroups.SlackChannelName">
            <summary>
                The name of this groups slack channel
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListActiveGroups.LogoInBase64">
            <summary>
                The group's logo.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListFutureEvents.EventSlug">
            <summary>
                The unique external ID for the event.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListFutureEvents.GroupName">
            <summary>
                The name of the group hosting the event.  For example YorkCodeDojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListFutureEvents.EventTitle">
            <summary>
                The title of the event.  Monthly meeting - October
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListFutureEvents.EventDescription">
            <summary>
                A description of the event in markdown.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListFutureEvents.EventStartsUTC">
            <summary>
                When does the event start,  in UTC time?
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListFutureEvents.EventFinishesUTC">
            <summary>
                When does the event finish, in UTC time?
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListGroups.Slug">
            <summary>
                The unique external code for the group.  For example YorkCodeDojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListGroups.IsActive">
            <summary>
                Is this group still actively running events?
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListGroups.Name">
            <summary>
            The unique name for the group / community.  For example York Code Dojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListGroups.Description">
            <summary>
            A description of the group in markdown
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListGroups.SlackChannelName">
            <summary>
                The name of this groups slack channel
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.ListGroups.LogoInBase64">
            <summary>
                The group's logo.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.PartiallyUpdateEvent.Title">
            <summary>
            The title of the event,  for example March 2019 Meetup. Must be unique for the group.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.PartiallyUpdateEvent.Description">
            <summary>
            A description of the event,  in markdown format.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.PartiallyUpdateEvent.Location">
            <summary>
            The location of the event, for example York Minster,  Room 201 York St John University
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.PartiallyUpdateEvent.StartTime">
            <summary>
            Date and time the event starts
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.PartiallyUpdateEvent.EndTime">
            <summary>
            Date and time the event ends.  Must be after the StartTime
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateEvent.Title">
            <summary>
            The title of the event,  for example March 2019 Meetup. Must be unique for the group.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateEvent.Description">
            <summary>
            A description of the event,  in markdown format.
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateEvent.Location">
            <summary>
            The location of the event, for example York Minster,  Room 201 York St John University
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateEvent.StartTime">
            <summary>
            Date and time the event starts
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateEvent.EndTime">
            <summary>
            Date and time the event ends.  Must be after the StartTime
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateGroup.Slug">
            <summary>
                The unique external code for the group.  For example YorkCodeDojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateGroup.IsActive">
            <summary>
                Is this group still actively running events?
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateGroup.Name">
            <summary>
            The unique name for the group / community.  For example York Code Dojo
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateGroup.Description">
            <summary>
            A description of the group in markdown
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateGroup.SlackChannelName">
            <summary>
                The name of this groups slack channel
            </summary>
        </member>
        <member name="P:VenimusAPIs.ViewModels.UpdateGroup.LogoInBase64">
            <summary>
                The group's logo.
            </summary>
        </member>
    </members>
</doc>
